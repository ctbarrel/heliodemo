{"version":3,"sources":["Config.js","components/LoggedInContext.js","components/Login.js","components/SignUp.js","crud.js","components/Home.js","components/Forgot.js","components/ProtectedRoute.js","components/EditUserModal.js","components/UserCard.js","components/EditUsers.js","components/MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["uriBase","apiVer","LoggedInContext","React","createContext","LoggedInProvider","props","useState","users","setUsers","loggedIn","setLoggedIn","token","setToken","Provider","value","checkUser","username","password","rtnVal","fetch","method","headers","body","JSON","stringify","toLowerCase","then","httpResponse","ok","Error","json","response","console","log","hasOwnProperty","authenticated","catch","err","children","LoggedInConsumer","Consumer","Login","setUsername","setPassword","useContext","Form","Group","controlId","Control","type","placeholder","onChange","event","preventDefault","target","Button","variant","onClick","to","SignUp","endpoint","doc","createOne","message","Home","map","user","Card","key","_id","Forgot","ProtectedRoute","Component","component","rest","render","EditUserModal","show","setShow","handleClose","Fragment","Modal","onHide","Header","closeButton","Title","fName","Body","readOnly","Footer","refresh","UserCard","style","width","Text","lName","result","EditUsers","allUsers","useEffect","MainRouter","path","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.37f673db.chunk.js","sourcesContent":["//configure our api endpoints\r\nconst uriBase = (process.env.NODE_ENV !== \"production\" ? (\r\n    'http://localhost:3000/'\r\n) : (\r\n    'https://ctbheliodemo.herokuapp.com/'\r\n))\r\n\r\nconst apiVer = 'api/v1/'\r\n\r\nexport {uriBase, apiVer}","import React from 'react'\r\nimport {uriBase, apiVer} from '../Config'\r\n\r\nconst LoggedInContext = React.createContext()\r\n\r\nfunction LoggedInProvider (props) {\r\n\r\n    let [users, setUsers] = React.useState([])\r\n    let [loggedIn, setLoggedIn] = React.useState(false)\r\n    let [token, setToken] = React.useState('')\r\n\r\n    //function to check user\r\n    const checkUser = (username, password) => {\r\n\r\n        let rtnVal = false\r\n        //if user/pass match, return true\r\n        fetch(`${uriBase}${apiVer}login`, {\r\n            \r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username: username.toLowerCase(), password})\r\n        })\r\n        .then(httpResponse => {\r\n            \r\n            if (!httpResponse.ok) {\r\n                throw new Error('Login Error')\r\n            }\r\n            //convert JSON from endpoint into an object\r\n            return httpResponse.json()\r\n        })\r\n        .then(response => {\r\n\r\n            console.log(response)\r\n\r\n            if (response.hasOwnProperty('authenticated')) {\r\n                setLoggedIn(response.authenticated)\r\n                \r\n                if (response.authenticated === true) {\r\n                    setToken(response.token)\r\n                }\r\n                \r\n                rtnVal = response.authenticated\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log('failed')\r\n        })\r\n\r\n        return rtnVal\r\n    }\r\n\r\n    return (\r\n        <LoggedInContext.Provider value={{users, loggedIn, checkUser, setUsers, token}}>\r\n            {props.children}\r\n        </LoggedInContext.Provider>\r\n    )\r\n}\r\n\r\nconst LoggedInConsumer = LoggedInContext.Consumer\r\nexport {LoggedInContext, LoggedInProvider, LoggedInConsumer}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {LoggedInConsumer, LoggedInContext} from './LoggedInContext'\r\n\r\nexport default function Login(props) {\r\n    //state\r\n    let [username,setUsername] = React.useState('')\r\n    let [password,setPassword] = React.useState('')\r\n    \r\n    //context\r\n    let {checkUser} = React.useContext(LoggedInContext)\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n        \r\n        event.preventDefault()\r\n        setUsername(event.target.value)\r\n    }\r\n    const passwordOnChangeHandler = (event) => {\r\n        \r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        //check if user exists and if password is being used\r\n        checkUser(username, password)\r\n        //if no, send error message '<username> doesn't exist'\r\n        //if password is correct, log in\r\n        //if password is wrong, say wrong password\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoggedInConsumer>\r\n                {\r\n                    value => (\r\n                        value.loggedIn ?\r\n                        (\r\n                            <h3>Logged In</h3>\r\n                        ) : (\r\n                            <h3>Not Logged In</h3>\r\n                        )\r\n                    )\r\n\r\n                }\r\n            </LoggedInConsumer>\r\n            <h1>Log In</h1>\r\n            <Form>\r\n                <Form.Group controlId=\"loginUsername\">\r\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={usernameOnChangeHandler} value={username}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"loginPassword\">\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\" onChange={passwordOnChangeHandler} value={password}/>\r\n                </Form.Group>\r\n                \r\n                <Button variant=\"outline-dark\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <Link to=\"/\"><Button variant=\"outline-secondary\">Home</Button></Link>\r\n            \r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {LoggedInConsumer, LoggedInContext} from './LoggedInContext'\r\nimport {uriBase, apiVer} from '../Config'\r\n\r\nimport {createOne} from '../crud'\r\n\r\nexport default function SignUp (props) {\r\n\r\n    let [username,setUsername] = React.useState('')\r\n    let [password,setPassword] = React.useState('')\r\n\r\n    let {token} = useContext(LoggedInContext)\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n        event.preventDefault()\r\n        \r\n        setUsername(event.target.value)\r\n    }\r\n    const passwordOnChangeHandler = (event) => {\r\n        event.preventDefault()\r\n        \r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            createOne(`${uriBase}${apiVer}users`, token, {username, password})\r\n            console.log('added')\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoggedInConsumer>\r\n                {\r\n                    value => (\r\n                        value.loggedIn ?\r\n                        (\r\n                            <h3>Logged In</h3>\r\n                        ) : (\r\n                            <h3>Not Logged In</h3>\r\n                        )\r\n                    )\r\n\r\n                }\r\n            </LoggedInConsumer>\r\n            <h1>Sign Up</h1>\r\n            <Form>\r\n\r\n                <Form.Group controlId=\"signUpUsername\">\r\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={usernameOnChangeHandler} value={username}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"signUpPassword\">\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\" onChange={passwordOnChangeHandler} value={password}/>\r\n                </Form.Group>\r\n                \r\n\r\n                <Button variant=\"outline-dark\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            \r\n            <Link to=\"/\"><Button variant=\"outline-secondary\">Home</Button></Link>\r\n\r\n        </div>\r\n    )\r\n}","//this file handles api calls to backend\r\n//functions require api endpoint, a token, and a doc\r\n\r\n//create a record\r\nexport function createOne (endpoint, token, doc) {\r\n\r\n    console.log(doc)\r\n    return fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n    .then(httpResponse => {\r\n        if (!httpResponse.ok) {\r\n            throw new Error(`Error with POST at ${endpoint}`)\r\n        }\r\n\r\n        return httpResponse.json()\r\n    })\r\n    .catch(err => {\r\n        throw err\r\n    })\r\n}\r\n\r\n//get all\r\nexport function getAll (endpoint) {\r\n\r\n    return fetch(endpoint, {\r\n        method: 'GET',\r\n        headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then (httpResponse => {\r\n        if(!httpResponse.ok) {\r\n            throw new Error(`Error with GET at ${endpoint}`)\r\n        }\r\n\r\n        return httpResponse.json()\r\n    })\r\n    .catch (err => {\r\n        throw err\r\n    })\r\n}\r\n\r\n//get one\r\nexport function getOne () {\r\n\r\n}\r\n\r\nexport function patchOne(endpoint, doc) {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PATCH\",\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(doc)\r\n    })\r\n    .then(httpResponse => {\r\n        if (!httpResponse.ok) {\r\n            throw new Error(`Error with PATCH at ${endpoint}`)\r\n        }\r\n        \r\n        return httpResponse.json()\r\n    })\r\n    .catch(err => {\r\n        throw err\r\n    })\r\n}\r\n\r\n//update one\r\nexport function updateOne(endpoint, doc) {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PUT\",\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(doc)\r\n    })\r\n    .then(httpResponse => {\r\n        \r\n        if (!httpResponse.ok) {\r\n            throw new Error(`Error with PUT at ${endpoint}`)\r\n        }\r\n\r\n        return httpResponse.json()\r\n    })\r\n    .catch(err => {\r\n        throw err\r\n    })\r\n}\r\n\r\n//delete one\r\nexport function deleteOne(endpoint) {\r\n\r\n    return fetch(endpoint, {\r\n        method: 'DELETE',\r\n        headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then (httpResponse => {\r\n        if(!httpResponse.ok) {\r\n            throw new Error(`Error with DELETE at ${endpoint}`)\r\n        }\r\n\r\n        return httpResponse.json()\r\n    })\r\n    .catch (err => {\r\n        throw err\r\n    })\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport {LoggedInConsumer, LoggedInContext} from './LoggedInContext'\r\n\r\nexport default function Home (props) {\r\n    \r\n    let {users} = React.useContext(LoggedInContext)\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <LoggedInConsumer>\r\n                {\r\n                    value => (\r\n                        value.loggedIn ?\r\n                        (\r\n                            <h3>Logged In</h3>\r\n                        ) : (\r\n                            <h3>Not Logged In</h3>\r\n                        )\r\n                    )\r\n\r\n                }\r\n            </LoggedInConsumer>\r\n            <h1>Welcome to the Home Page</h1>\r\n            <Link to=\"/login\"><Button variant='outline-danger'>Login</Button></Link>\r\n            <br></br>\r\n            <Link to=\"/signup\"><Button variant='outline-warning'>Sign Up</Button></Link>\r\n            <br></br>\r\n            <Link to=\"/forgot\"><Button variant='outline-success'>Forgot Password?</Button></Link>\r\n            <br></br>\r\n            <Link to=\"/admin\"><Button variant='outline-info'>Edit Users</Button></Link>            \r\n            {\r\n                users.map(user => {\r\n                    return <Card body key={props.user._id}>{props.user.username}</Card>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {LoggedInConsumer} from './LoggedInContext'\r\nimport {uriBase, apiVer} from '../Config'\r\nimport {patchOne} from '../crud'\r\n\r\nexport default function Forgot(props) {\r\n\r\n    let [username,setUsername] = React.useState('')\r\n    let [password,setPassword] = React.useState('')\r\n    \r\n    const usernameOnChangeHandler = (event) => {\r\n        \r\n        event.preventDefault()\r\n        setUsername(event.target.value)\r\n    }\r\n    const passwordOnChangeHandler = (event) => {\r\n        \r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            patchOne(`${uriBase}${apiVer}users/${username}`, {password})\r\n            console.log('Patched')\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoggedInConsumer>\r\n                {\r\n                    value => (\r\n                        value.loggedIn ?\r\n                        (\r\n                            <h3>Logged In</h3>\r\n                        ) : (\r\n                            <h3>Not Logged In</h3>\r\n                        )\r\n                    )\r\n\r\n                }\r\n            </LoggedInConsumer>\r\n            <h1>Forgot Password?</h1>\r\n            <Form>\r\n                <Form.Group controlId=\"forgotUsername\">\r\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={usernameOnChangeHandler} value={username}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"forgotPassword\">\r\n                    <Form.Control type=\"password\" placeholder=\"New Password\" onChange={passwordOnChangeHandler} value={password}/>\r\n                </Form.Group>\r\n                \r\n                <Button variant=\"outline-dark\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <Link to=\"/\"><Button variant='outline-secondary'>Home</Button></Link>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {LoggedInConsumer} from './LoggedInContext'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\n\r\nexport default function ProtectedRoute ({component: Component, ...rest}) {\r\n\r\n    return (\r\n        <div>\r\n        <LoggedInConsumer>\r\n            {\r\n                ({loggedIn}) => (\r\n                    <Route\r\n                        render={props =>\r\n                            loggedIn ? <Component {...props} /> : <Redirect to='/' />\r\n                        }\r\n                        {...rest}\r\n                    />\r\n                )\r\n            }\r\n        </LoggedInConsumer>\r\n        <Link to='/'><Button variant='outline-secondary'>Home</Button></Link>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { updateOne } from '../crud'\r\nimport { uriBase, apiVer } from '../Config'\r\n\r\nexport default function EditUserModal(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [username, setUsername] = useState(props.user.username)\r\n    const [password, setPassword] = useState(props.user.password)\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        setUsername(event.target.value)\r\n    }\r\n    const passwordOnChangeHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const saveOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            updateOne(`${uriBase}${apiVer}users/${props.user.username}`, { username, password })\r\n            console.log('updated')\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n        \r\n        setShow(false)\r\n        props.refresh()\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <Button variant=\"outline-secondary\" onClick={handleShow}>Edit</Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Change info for {props.user.fName}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n\r\n                        <Form.Group controlId=\"editUserModalUsername\">\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" value={username} onChange={usernameOnChangeHandler} readOnly />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"editUserModalPassword\">\r\n                            <Form.Control type=\"password\" placeholder=\"Enter Password\" onChange={passwordOnChangeHandler} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"outline-dark\" onClick={handleClose}>\r\n                        Cancel\r\n                        </Button>\r\n\r\n                    <Button variant=\"outline-secondary\" onClick={saveOnClickHandler}>\r\n                        Save Changes\r\n                        </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport EditUserModal from './EditUserModal'\r\nimport {deleteOne} from '../crud'\r\nimport {uriBase, apiVer} from '../Config'\r\n\r\nexport default function UserCard(props) {\r\n    \r\n    function deleteOnClickHandler() {\r\n\r\n        deleteOne(`${uriBase}${apiVer}users/${props.user.username}`, props.user)\r\n        .then(result => {\r\n            props.refresh()\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Body>\r\n                    <Card.Title>{props.user.username}</Card.Title>\r\n                    <Card.Text>\r\n                        {`${props.user.fName} ${props.user.lName}`}\r\n                    </Card.Text>\r\n                    <EditUserModal user={props.user} refresh={props.refresh}></EditUserModal>\r\n                    <Button variant=\"outline-danger\" onClick={deleteOnClickHandler}>Delete</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {getAll} from '../crud'\r\nimport {uriBase, apiVer} from '../Config'\r\nimport UserCard from './UserCard'\r\n\r\nexport default function EditUsers (props) {\r\n    \r\n    const [users, setUsers] = useState([])\r\n\r\n    const refresh = () => {\r\n\r\n        getAll(`${uriBase}${apiVer}users`)\r\n        .then(allUsers => {\r\n            setUsers(allUsers)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refresh()\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Users</h2>\r\n            {\r\n                users.map(user => {\r\n                    return (\r\n                    <UserCard key={user._id} user={user} refresh={refresh}></UserCard>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\n\r\nimport {LoggedInProvider} from './LoggedInContext'\r\nimport Login from './Login'\r\nimport SignUp from './SignUp'\r\nimport Home from './Home'\r\nimport Forgot from './Forgot'\r\nimport ProtectedRoute from './ProtectedRoute'\r\nimport EditUsers from './EditUsers'\r\n\r\nexport default function MainRouter () {\r\n\r\n    return (\r\n    <LoggedInProvider>\r\n        <Router>\r\n            <Switch>\r\n                <Route path='/signup' component={SignUp}></Route>\r\n                <Route path='/login' component={Login}></Route>\r\n                <Route path='/forgot' component={Forgot}></Route>\r\n                <ProtectedRoute path=\"/admin\" component={EditUsers}></ProtectedRoute>\r\n                <Route path='/' component={Home}></Route>\r\n            </Switch>\r\n        </Router>\r\n    </LoggedInProvider>\r\n)}","import React from 'react';\nimport './App.css';\nimport MainRouter from './components/MainRouter'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter></MainRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}